{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\silvi\\\\selu-blog\\\\client\\\\components\\\\auth\\\\SignIn.component.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { signin } from '../../actions/auth';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nvar SignInComponent = function SignInComponent() {\n  _s();\n\n  var _useState = useState({\n    name: 'SLU Lions',\n    email: 'silvinpradhan95@gmail.com',\n    password: 'Invoker200695@@',\n    error: '',\n    loading: false,\n    message: '',\n    showForm: true\n  }),\n      values = _useState[0],\n      setValues = _useState[1]; // Destructure te values from the state.\n\n\n  var name = values.name,\n      email = values.email,\n      password = values.password,\n      error = values.error,\n      loading = values.loading,\n      message = values.message,\n      showForm = values.showForm;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); // console.table({ name, email, password, error, loading, message, showForm })\n\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: true,\n                error: false\n              }));\n              user = {\n                name: name,\n                email: email,\n                password: password\n              };\n              _context.next = 5;\n              return signup(user).then(function (data) {\n                if (data.error) {\n                  setValues(_objectSpread(_objectSpread({}, values), {}, {\n                    error: data.error,\n                    loading: false\n                  }));\n                  toast.error(\"\".concat(data.error));\n                } else {\n                  setValues(_objectSpread(_objectSpread({}, values), {}, {\n                    name: '',\n                    email: '',\n                    password: '',\n                    error: '',\n                    loading: false,\n                    message: data.message,\n                    showForm: false\n                  }));\n                  toast.success(\"\".concat(data.message));\n                }\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({\n        error: false\n      }, name, e.target.value)));\n    };\n  };\n\n  var showLoading = function showLoading() {\n    return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 76\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 42\n    }, _this) : \"\";\n  };\n\n  var showError = function showError() {\n    return error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [\" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 38\n    }, _this) : \"\";\n  };\n\n  var showMessage = function showMessage() {\n    return message ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: [\" \", message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 42\n    }, _this) : \"\";\n  };\n\n  var signinForm = function signinForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        newestOnTop: true,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          onChange: handleChange('name'),\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          onChange: handleChange('email'),\n          type: \"email\",\n          className: \"form-control\",\n          placeholder: \"Type your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: handleChange('password'),\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Type your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col text-center\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/spinner.png\",\n          width: \"100px\",\n          height: \"100px\",\n          alt: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }, _this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 110\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showError(), showLoading(), showMessage(), showForm && signinForm()]\n  }, void 0, true);\n};\n\n_s(SignInComponent, \"RRhk+Xva0sTvoJOrqwn7WWeYW84=\");\n\n_c = SignInComponent;\nexport default SignInComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInComponent\");","map":{"version":3,"sources":["C:/Users/silvi/selu-blog/client/components/auth/SignIn.component.jsx"],"names":["useState","signin","ToastContainer","toast","SignInComponent","name","email","password","error","loading","message","showForm","values","setValues","handleSubmit","e","preventDefault","user","signup","then","data","success","handleChange","target","value","showLoading","showError","showMessage","signinForm"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,kBACEJ,QAAQ,CAAC;AACjCK,IAAAA,IAAI,EAAE,WAD2B;AAEjCC,IAAAA,KAAK,EAAE,2BAF0B;AAGjCC,IAAAA,QAAQ,EAAE,iBAHuB;AAIjCC,IAAAA,KAAK,EAAE,EAJ0B;AAKjCC,IAAAA,OAAO,EAAE,KALwB;AAMjCC,IAAAA,OAAO,EAAE,EANwB;AAOjCC,IAAAA,QAAQ,EAAE;AAPuB,GAAD,CADV;AAAA,MACnBC,MADmB;AAAA,MACXC,SADW,iBAW1B;;;AAX0B,MAYlBR,IAZkB,GAY2CO,MAZ3C,CAYlBP,IAZkB;AAAA,MAYZC,KAZY,GAY2CM,MAZ3C,CAYZN,KAZY;AAAA,MAYLC,QAZK,GAY2CK,MAZ3C,CAYLL,QAZK;AAAA,MAYKC,KAZL,GAY2CI,MAZ3C,CAYKJ,KAZL;AAAA,MAYYC,OAZZ,GAY2CG,MAZ3C,CAYYH,OAZZ;AAAA,MAYqBC,OAZrB,GAY2CE,MAZ3C,CAYqBF,OAZrB;AAAA,MAY8BC,QAZ9B,GAY2CC,MAZ3C,CAY8BD,QAZ9B;;AAc1B,MAAMG,YAAY;AAAA,wEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBA,cAAAA,CAAC,CAACC,cAAF,GADiB,CAEjB;;AACAH,cAAAA,SAAS,iCAAMD,MAAN;AAAcH,gBAAAA,OAAO,EAAE,IAAvB;AAA6BD,gBAAAA,KAAK,EAAE;AAApC,iBAAT;AACMS,cAAAA,IAJW,GAIJ;AAAEZ,gBAAAA,IAAI,EAAJA,IAAF;AAAQC,gBAAAA,KAAK,EAALA,KAAR;AAAeC,gBAAAA,QAAQ,EAARA;AAAf,eAJI;AAAA;AAAA,qBAMXW,MAAM,CAACD,IAAD,CAAN,CAAaE,IAAb,CAAkB,UAAAC,IAAI,EAAI;AAC5B,oBAAIA,IAAI,CAACZ,KAAT,EAAgB;AACZK,kBAAAA,SAAS,iCAAMD,MAAN;AAAcJ,oBAAAA,KAAK,EAAEY,IAAI,CAACZ,KAA1B;AAAiCC,oBAAAA,OAAO,EAAE;AAA1C,qBAAT;AACAN,kBAAAA,KAAK,CAACK,KAAN,WAAeY,IAAI,CAACZ,KAApB;AACH,iBAHD,MAGO;AACHK,kBAAAA,SAAS,iCAAMD,MAAN;AAAcP,oBAAAA,IAAI,EAAE,EAApB;AAAwBC,oBAAAA,KAAK,EAAE,EAA/B;AAAmCC,oBAAAA,QAAQ,EAAE,EAA7C;AAAiDC,oBAAAA,KAAK,EAAE,EAAxD;AAA4DC,oBAAAA,OAAO,EAAE,KAArE;AAA4EC,oBAAAA,OAAO,EAAEU,IAAI,CAACV,OAA1F;AAAmGC,oBAAAA,QAAQ,EAAE;AAA7G,qBAAT;AACAR,kBAAAA,KAAK,CAACkB,OAAN,WAAiBD,IAAI,CAACV,OAAtB;AACH;AACJ,eARK,CANW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZI,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAiBA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,CAAAjB,IAAI;AAAA,WAAI,UAACU,CAAD,EAAO;AAChCF,MAAAA,SAAS,iCAAMD,MAAN;AAAcJ,QAAAA,KAAK,EAAE;AAArB,SAA6BH,IAA7B,EAAoCU,CAAC,CAACQ,MAAF,CAASC,KAA7C,GAAT;AACH,KAFwB;AAAA,GAAzB;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAOhB,OAAO,gBAAG;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,aAAH,GAAuE,EAArF;AAAA,GAApB;;AACA,MAAMiB,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAOlB,KAAK,gBAAG;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,sBAAsCA,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,aAAH,GAAwD,EAApE;AAAA,GAAlB;;AACA,MAAMmB,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAOjB,OAAO,gBAAG;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,sBAAoCA,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA,aAAH,GAAwD,EAAtE;AAAA,GAApB;;AAEA,MAAMkB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,wBACI;AAAM,MAAA,QAAQ,EAAEd,YAAhB;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,WAAzB;AAAqC,QAAA,SAAS,EAAE,IAAhD;AAAsD,QAAA,eAAe,EAAE,KAAvE;AAA8E,QAAA,WAAW,MAAzF;AAA0F,QAAA,YAAY,MAAtG;AAAuG,QAAA,GAAG,EAAE,KAA5G;AAAmH,QAAA,gBAAgB,MAAnI;AAAoI,QAAA,SAAS,MAA7I;AAA8I,QAAA,YAAY;AAA1J;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAO,UAAA,KAAK,EAAET,IAAd;AAAoB,UAAA,QAAQ,EAAEiB,YAAY,CAAC,MAAD,CAA1C;AAAoD,UAAA,IAAI,EAAC,MAAzD;AAAgE,UAAA,SAAS,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAMI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAO,UAAA,KAAK,EAAEhB,KAAd;AAAqB,UAAA,QAAQ,EAAEgB,YAAY,CAAC,OAAD,CAA3C;AAAsD,UAAA,IAAI,EAAC,OAA3D;AAAmE,UAAA,SAAS,EAAC,cAA7E;AAA4F,UAAA,WAAW,EAAC;AAAxG;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,eAUI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAO,UAAA,KAAK,EAAEf,QAAd;AAAwB,UAAA,QAAQ,EAAEe,YAAY,CAAC,UAAD,CAA9C;AAA4D,UAAA,IAAI,EAAC,UAAjE;AAA4E,UAAA,SAAS,EAAC,cAAtF;AAAqG,UAAA,WAAW,EAAC;AAAjH;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAVJ,eAeI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,kBACKb,OAAO,gBAAI;AAAK,UAAA,GAAG,EAAC,cAAT;AAAwB,UAAA,KAAK,EAAC,OAA9B;AAAsC,UAAA,MAAM,EAAC,OAA7C;AAAqD,UAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,iBAAJ,gBAAiF;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD7F;AAAA;AAAA;AAAA;AAAA,eAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAqBH,GAtBD;;AAuBA,sBACI;AAAA,eACKiB,SAAS,EADd,EAEKD,WAAW,EAFhB,EAGKE,WAAW,EAHhB,EAKMhB,QAAQ,IAAIiB,UAAU,EAL5B;AAAA,kBADJ;AASH,CAvED;;GAAMxB,e;;KAAAA,e;AAyEN,eAAeA,eAAf","sourcesContent":["import { useState } from 'react'\r\nimport { signin } from '../../actions/auth'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst SignInComponent = () => {\r\n    const [values, setValues] = useState({\r\n        name: 'SLU Lions',\r\n        email: 'silvinpradhan95@gmail.com',\r\n        password: 'Invoker200695@@',\r\n        error: '',\r\n        loading: false,\r\n        message: '',\r\n        showForm: true\r\n    })\r\n\r\n    // Destructure te values from the state.\r\n    const { name, email, password, error, loading, message, showForm } = values\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // console.table({ name, email, password, error, loading, message, showForm })\r\n        setValues({ ...values, loading: true, error: false })\r\n        const user = { name, email, password }\r\n\r\n        await signup(user).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, loading: false })\r\n                toast.error(`${data.error}`)\r\n            } else {\r\n                setValues({ ...values, name: '', email: '', password: '', error: '', loading: false, message: data.message, showForm: false, })\r\n                toast.success(`${data.message}`)\r\n            }\r\n        })\r\n\r\n    }\r\n    const handleChange = name => (e) => {\r\n        setValues({ ...values, error: false, [name]: e.target.value })\r\n    };\r\n\r\n    const showLoading = () => (loading ? <div className=\"alert alert-info\"><span> Loading ...</span></div> : \"\");\r\n    const showError = () => (error ? <div className=\"alert alert-danger\"> {error}</div> : \"\");\r\n    const showMessage = () => (message ? <div className=\"alert alert-info\"> {message}</div> : \"\");\r\n\r\n    const signinForm = () => {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <ToastContainer position=\"top-right\" autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input value={name} onChange={handleChange('name')} type=\"text\" className=\"form-control\"></input>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <input value={email} onChange={handleChange('email')} type=\"email\" className=\"form-control\" placeholder=\"Type your email\"></input>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input value={password} onChange={handleChange('password')} type=\"password\" className=\"form-control\" placeholder=\"Type your password\"></input>\r\n                </div>\r\n                {/* Submit */}\r\n                <div className=\"form-group col text-center\">\r\n                    {loading ? (<img src=\"/spinner.png\" width=\"100px\" height=\"100px\" alt=\"Loading...\" />) : (<button className=\"btn btn-primary\">Register</button>)}\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            {showError()}\r\n            {showLoading()}\r\n            {showMessage()}\r\n\r\n            { showForm && signinForm()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignInComponent\r\n"]},"metadata":{},"sourceType":"module"}