{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport cookie from 'js-cookie';\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n}; // Set Cookie\n\nexport const setCookie = (key, value) => {\n  // check if the process is running in the client side\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // Get Cookie\n\nexport const getCookie = key => {\n  if (false) {\n    cookie.get(key);\n  }\n}; // LocalStorage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n};\n/* Middleware Setup  */\n// Authenticate user by pass data to cookie and localStorage\n\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n}; // Get the authenticated user data from localStorage\n\nexport const isAuthenticated = () => {\n  if (false) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/silvi/selu-blog/client/actions/auth.js"],"names":["fetch","API","cookie","signup","user","method","headers","Accept","body","JSON","stringify","then","res","json","catch","err","console","log","signin","setCookie","key","value","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeLocalStorage","removeItem","authenticate","data","next","token","isAuthenticated","cookieChecked","getItem","parse"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport cookie from 'js-cookie';\r\n\r\nexport const signup = (user) => {\r\n\treturn fetch(`${API}/signup`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(user),\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const signin = (user) => {\r\n\treturn fetch(`${API}/signin`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(user),\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// Set Cookie\r\nexport const setCookie = (key, value) => {\r\n\t// check if the process is running in the client side\r\n\tif (process.browser) {\r\n\t\tcookie.set(key, value, {\r\n\t\t\texpires: 1,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const removeCookie = (key) => {\r\n\tif (process.browser) {\r\n\t\tcookie.remove(key, {\r\n\t\t\texpires: 1,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Get Cookie\r\nexport const getCookie = (key) => {\r\n\tif (process.browser) {\r\n\t\tcookie.get(key);\r\n\t}\r\n};\r\n\r\n// LocalStorage\r\nexport const setLocalStorage = (key, value) => {\r\n\tif (process.browser) {\r\n\t\tlocalStorage.setItem(key, JSON.stringify(value));\r\n\t}\r\n};\r\n\r\nexport const removeLocalStorage = (key) => {\r\n\tif (process.browser) {\r\n\t\tlocalStorage.removeItem(key);\r\n\t}\r\n};\r\n\r\n/* Middleware Setup  */\r\n// Authenticate user by pass data to cookie and localStorage\r\nexport const authenticate = (data, next) => {\r\n\tsetCookie('token', data.token);\r\n\tsetLocalStorage('user', data.user);\r\n\tnext();\r\n};\r\n\r\n// Get the authenticated user data from localStorage\r\nexport const isAuthenticated = () => {\r\n\tif (process.browser) {\r\n\t\tconst cookieChecked = getCookie('token');\r\n\t\tif (cookieChecked) {\r\n\t\t\tif (localStorage.getItem('user')) {\r\n\t\t\t\treturn JSON.parse(localStorage.getItem('user'));\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}