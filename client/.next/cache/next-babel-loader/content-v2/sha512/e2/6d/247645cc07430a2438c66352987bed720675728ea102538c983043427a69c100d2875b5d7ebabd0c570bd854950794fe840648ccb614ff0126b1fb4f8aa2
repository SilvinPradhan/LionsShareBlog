{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const create = (category, token) => {\n  return fetch(`${API}/category`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: 'GET'\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const singleCategory = slug => {\n  return fetch(`${API}/category/${slug}`, {\n    method: 'GET'\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const removeCategory = (slug, token) => {\n  return fetch(`${API}/category/${slug}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/silvi/selu-blog/client/actions/category.js"],"names":["fetch","API","create","category","token","method","headers","Accept","Authorization","body","JSON","stringify","then","res","json","catch","err","console","log","getCategories","singleCategory","slug","removeCategory"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC1C,SAAOJ,KAAK,CAAE,GAAEC,GAAI,WAAR,EAAoB;AAC/BI,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE,kBADA;AAER,sBAAgB,kBAFR;AAGRC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAHvB,KAFsB;AAO/BK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAPyB,GAApB,CAAL,CASLS,IATK,CASCC,GAAD,IAAS;AACd,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACA,GAXK,EAYLC,KAZK,CAYEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZV,CAAP;AAaA,CAdM;AAgBP,OAAO,MAAMG,aAAa,GAAG,MAAM;AAClC,SAAOnB,KAAK,CAAE,GAAEC,GAAI,aAAR,EAAsB;AACjCI,IAAAA,MAAM,EAAE;AADyB,GAAtB,CAAL,CAGLO,IAHK,CAGCC,GAAD,IAAS;AACd,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACA,GALK,EAMLC,KANK,CAMEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANV,CAAP;AAOA,CARM;AAUP,OAAO,MAAMI,cAAc,GAAIC,IAAD,IAAU;AACvC,SAAOrB,KAAK,CAAE,GAAEC,GAAI,aAAYoB,IAAK,EAAzB,EAA4B;AACvChB,IAAAA,MAAM,EAAE;AAD+B,GAA5B,CAAL,CAGLO,IAHK,CAGCC,GAAD,IAAS;AACd,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACA,GALK,EAMLC,KANK,CAMEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANV,CAAP;AAOA,CARM;AASP,OAAO,MAAMM,cAAc,GAAG,CAACD,IAAD,EAAOjB,KAAP,KAAiB;AAC9C,SAAOJ,KAAK,CAAE,GAAEC,GAAI,aAAYoB,IAAK,EAAzB,EAA4B;AACvChB,IAAAA,MAAM,EAAE,QAD+B;AAEvCC,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE,kBADA;AAER,sBAAgB,kBAFR;AAGRC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAHvB;AAF8B,GAA5B,CAAL,CAQLQ,IARK,CAQCC,GAAD,IAAS;AACd,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACA,GAVK,EAWLC,KAXK,CAWEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXV,CAAP;AAYA,CAbM","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const create = (category, token) => {\r\n\treturn fetch(`${API}/category`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(category),\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const getCategories = () => {\r\n\treturn fetch(`${API}/categories`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const singleCategory = (slug) => {\r\n\treturn fetch(`${API}/category/${slug}`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\nexport const removeCategory = (slug, token) => {\r\n\treturn fetch(`${API}/category/${slug}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}