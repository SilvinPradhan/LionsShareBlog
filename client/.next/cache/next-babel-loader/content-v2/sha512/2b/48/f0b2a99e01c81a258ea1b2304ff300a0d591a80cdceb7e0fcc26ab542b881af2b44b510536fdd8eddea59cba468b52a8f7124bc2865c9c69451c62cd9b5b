{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport cookie from 'js-cookie';\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n}; // signout\n\nexport const signout = next => {\n  removeCookie('token');\n  removeLocalStorage('user');\n  next();\n  return fetch(`${API}/signout`, {\n    method: 'GET'\n  }).then(res => {\n    console.log('signout successful.');\n  }).catch(err => {\n    console.log(err);\n  });\n}; // Set Cookie\n\nexport const setCookie = (key, value) => {\n  // check if the process is running in the client side\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // Get Cookie\n\nexport const getCookie = key => {\n  if (false) {\n    return cookie.get(key);\n  }\n}; // LocalStorage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n};\n/* Middleware Setup  */\n// Authenticate user by pass data to cookie and localStorage\n\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n}; // Get the authenticated user data from localStorage\n\nexport const isAuthenticated = () => {\n  if (false) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/silvi/selu-blog/client/actions/auth.js"],"names":["fetch","API","cookie","signup","user","method","headers","Accept","body","JSON","stringify","then","res","json","catch","err","console","log","signin","signout","next","removeCookie","removeLocalStorage","setCookie","key","value","set","expires","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeItem","authenticate","data","token","isAuthenticated","cookieChecked","getItem","parse"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport cookie from 'js-cookie';\r\n\r\nexport const signup = (user) => {\r\n\treturn fetch(`${API}/signup`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(user),\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const signin = (user) => {\r\n\treturn fetch(`${API}/signin`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(user),\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// signout\r\nexport const signout = (next) => {\r\n\tremoveCookie('token');\r\n\tremoveLocalStorage('user');\r\n\tnext();\r\n\r\n\treturn fetch(`${API}/signout`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\tconsole.log('signout successful.');\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n};\r\n\r\n// Set Cookie\r\nexport const setCookie = (key, value) => {\r\n\t// check if the process is running in the client side\r\n\tif (process.browser) {\r\n\t\tcookie.set(key, value, {\r\n\t\t\texpires: 1,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const removeCookie = (key) => {\r\n\tif (process.browser) {\r\n\t\tcookie.remove(key, {\r\n\t\t\texpires: 1,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Get Cookie\r\nexport const getCookie = (key) => {\r\n\tif (process.browser) {\r\n\t\treturn cookie.get(key);\r\n\t}\r\n};\r\n\r\n// LocalStorage\r\nexport const setLocalStorage = (key, value) => {\r\n\tif (process.browser) {\r\n\t\tlocalStorage.setItem(key, JSON.stringify(value));\r\n\t}\r\n};\r\n\r\nexport const removeLocalStorage = (key) => {\r\n\tif (process.browser) {\r\n\t\tlocalStorage.removeItem(key);\r\n\t}\r\n};\r\n\r\n/* Middleware Setup  */\r\n// Authenticate user by pass data to cookie and localStorage\r\nexport const authenticate = (data, next) => {\r\n\tsetCookie('token', data.token);\r\n\tsetLocalStorage('user', data.user);\r\n\tnext();\r\n};\r\n\r\n// Get the authenticated user data from localStorage\r\nexport const isAuthenticated = () => {\r\n\tif (process.browser) {\r\n\t\tconst cookieChecked = getCookie('token');\r\n\t\tif (cookieChecked) {\r\n\t\t\tif (localStorage.getItem('user')) {\r\n\t\t\t\treturn JSON.parse(localStorage.getItem('user'));\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}