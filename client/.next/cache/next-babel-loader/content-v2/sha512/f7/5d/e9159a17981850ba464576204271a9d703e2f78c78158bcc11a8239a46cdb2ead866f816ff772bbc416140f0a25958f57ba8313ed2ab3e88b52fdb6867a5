{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const create = (tag, token) => {\n  return fetch(`${API}/tag`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(tag)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const getTags = () => {\n  return fetch(`${API}/tags`, {\n    method: 'GET'\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const singleTag = slug => {\n  return fetch(`${API}/tag/${slug}`, {\n    method: 'GET'\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const removeTag = (slug, token) => {\n  return fetch(`${API}/tag/${slug}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/silvi/selu-blog/client/actions/tag.js"],"names":["fetch","API","create","tag","token","method","headers","Accept","Authorization","body","JSON","stringify","then","res","json","catch","err","console","log","getTags","singleTag","slug","removeTag"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrC,SAAOJ,KAAK,CAAE,GAAEC,GAAI,MAAR,EAAe;AAC1BI,IAAAA,MAAM,EAAE,MADkB;AAE1BC,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE,kBADA;AAER,sBAAgB,kBAFR;AAGRC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAHvB,KAFiB;AAO1BK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,GAAf;AAPoB,GAAf,CAAL,CASLS,IATK,CASCC,GAAD,IAAS;AACd,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACA,GAXK,EAYLC,KAZK,CAYEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZV,CAAP;AAaA,CAdM;AAgBP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC5B,SAAOnB,KAAK,CAAE,GAAEC,GAAI,OAAR,EAAgB;AAC3BI,IAAAA,MAAM,EAAE;AADmB,GAAhB,CAAL,CAGLO,IAHK,CAGCC,GAAD,IAAS;AACd,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACA,GALK,EAMLC,KANK,CAMEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANV,CAAP;AAOA,CARM;AAUP,OAAO,MAAMI,SAAS,GAAIC,IAAD,IAAU;AAClC,SAAOrB,KAAK,CAAE,GAAEC,GAAI,QAAOoB,IAAK,EAApB,EAAuB;AAClChB,IAAAA,MAAM,EAAE;AAD0B,GAAvB,CAAL,CAGLO,IAHK,CAGCC,GAAD,IAAS;AACd,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACA,GALK,EAMLC,KANK,CAMEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANV,CAAP;AAOA,CARM;AASP,OAAO,MAAMM,SAAS,GAAG,CAACD,IAAD,EAAOjB,KAAP,KAAiB;AACzC,SAAOJ,KAAK,CAAE,GAAEC,GAAI,QAAOoB,IAAK,EAApB,EAAuB;AAClChB,IAAAA,MAAM,EAAE,QAD0B;AAElCC,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE,kBADA;AAER,sBAAgB,kBAFR;AAGRC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAHvB;AAFyB,GAAvB,CAAL,CAQLQ,IARK,CAQCC,GAAD,IAAS;AACd,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACA,GAVK,EAWLC,KAXK,CAWEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXV,CAAP;AAYA,CAbM","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const create = (tag, token) => {\r\n\treturn fetch(`${API}/tag`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(tag),\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const getTags = () => {\r\n\treturn fetch(`${API}/tags`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const singleTag = (slug) => {\r\n\treturn fetch(`${API}/tag/${slug}`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\nexport const removeTag = (slug, token) => {\r\n\treturn fetch(`${API}/tag/${slug}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}