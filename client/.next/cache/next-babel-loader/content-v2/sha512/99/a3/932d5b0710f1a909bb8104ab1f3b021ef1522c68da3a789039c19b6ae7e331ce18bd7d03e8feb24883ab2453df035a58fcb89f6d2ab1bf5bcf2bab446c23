{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\silvi\\\\selu-blog\\\\client\\\\components\\\\crud\\\\Category.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { isAuthenticated, getCookie } from '../../actions/auth';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { create, getCategories, removeCategory } from '../../actions/category';\nimport { CardActions, FormControl, Input, InputLabel, InputAdornment, Button, Tooltip } from '@material-ui/core';\nimport React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport ClassIcon from '@material-ui/icons/Class';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing.unit\n  },\n  button: {\n    minWidth: 20,\n    width: 'auto',\n    height: '37px',\n    letterSpacing: '0.5px',\n    lineHeight: '35px',\n    padding: '0 25px 0 25px',\n    fontSize: '13.5px',\n    backgroundColor: '#334aa6',\n    color: 'white',\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n    borderRadius: '5px',\n    border: 'none',\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: '#525ed9'\n    }\n  },\n  buttonList: {\n    border: '0.5px solid #e8e8e8',\n    textTransform: 'capitalize',\n    justifyContent: 'space-between',\n    display: 'inline-block'\n  }\n}));\n\nconst Category = props => {\n  const classes = useStyles();\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    error: false,\n    success: false,\n    categories: [],\n    removed: false,\n    reload: false\n  });\n  const {\n    name,\n    error,\n    success,\n    categories,\n    removed,\n    reload\n  } = values;\n  const token = getCookie('token');\n  useEffect(() => {\n    loadCategories();\n  }, [reload]);\n\n  const loadCategories = () => {\n    getCategories().then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          categories: data\n        }));\n        console.log(categories);\n      }\n    });\n  };\n\n  const showCategories = () => {\n    return categories.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        interactive: true,\n        title: \"Double Click to Delete\",\n        arrow: true,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onDoubleClick: () => confirmDelete(item.slug),\n          className: \"btn btn-outline-primary mr-1 ml-1 mt-3\",\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this);\n    });\n  };\n\n  const confirmDelete = slug => {\n    let answer = window.confirm(`Do you want to delete \"${slug}\" category? `);\n\n    if (answer) {\n      deleteCategory(slug);\n    }\n  };\n\n  const deleteCategory = slug => {\n    removeCategory(slug, token).then(data => {\n      if (data.error) console.log(data.error);else setValues(_objectSpread(_objectSpread({}, values), {}, {\n        error: false,\n        success: false,\n        name: '',\n        removed: !removed,\n        reload: !reload\n      }));\n    });\n    console.log('deletes', slug);\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    create({\n      name\n    }, token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error,\n          success: false\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: false,\n          success: true,\n          name: '',\n          removed: !removed,\n          reload: !reload\n        }));\n      }\n    });\n  };\n\n  const handleChange = e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      name: e.target.value,\n      error: false,\n      success: false,\n      removed: ''\n    }));\n  };\n\n  const newCategoryForm = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: clickSubmit,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.margin,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"input-with-category-icon\",\n          children: \"Category Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"input-with-category-icon\",\n          type: \"text\",\n          onChange: handleChange,\n          value: name,\n          required: true,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(ClassIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            className: classes.button,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [newCategoryForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: showCategories()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Category;","map":{"version":3,"sources":["C:/Users/silvi/selu-blog/client/components/crud/Category.js"],"names":["useState","useEffect","isAuthenticated","getCookie","makeStyles","create","getCategories","removeCategory","CardActions","FormControl","Input","InputLabel","InputAdornment","Button","Tooltip","React","CustomButton","ClassIcon","ListGroup","ListGroupItem","useStyles","theme","margin","spacing","unit","button","minWidth","width","height","letterSpacing","lineHeight","padding","fontSize","backgroundColor","color","textTransform","fontWeight","borderRadius","border","cursor","buttonList","justifyContent","display","Category","props","classes","values","setValues","name","error","success","categories","removed","reload","token","loadCategories","then","data","console","log","showCategories","map","item","index","confirmDelete","slug","answer","window","confirm","deleteCategory","clickSubmit","e","preventDefault","handleChange","target","value","newCategoryForm"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { isAuthenticated, getCookie } from '../../actions/auth';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { create, getCategories, removeCategory } from '../../actions/category';\r\nimport { CardActions, FormControl, Input, InputLabel, InputAdornment, Button, Tooltip } from '@material-ui/core';\r\nimport React from 'react';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport ClassIcon from '@material-ui/icons/Class';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmargin: {\r\n\t\tmargin: theme.spacing.unit,\r\n\t},\r\n\tbutton: {\r\n\t\tminWidth: 20,\r\n\t\twidth: 'auto',\r\n\t\theight: '37px',\r\n\t\tletterSpacing: '0.5px',\r\n\t\tlineHeight: '35px',\r\n\t\tpadding: '0 25px 0 25px',\r\n\t\tfontSize: '13.5px',\r\n\t\tbackgroundColor: '#334aa6',\r\n\t\tcolor: 'white',\r\n\t\ttextTransform: 'uppercase',\r\n\t\tfontWeight: 'bold',\r\n\t\tborderRadius: '5px',\r\n\t\tborder: 'none',\r\n\t\tcursor: 'pointer',\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: '#525ed9',\r\n\t\t},\r\n\t},\r\n\tbuttonList: {\r\n\t\tborder: '0.5px solid #e8e8e8',\r\n\t\ttextTransform: 'capitalize',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tdisplay: 'inline-block',\r\n\t},\r\n}));\r\n\r\nconst Category = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst [values, setValues] = useState({\r\n\t\tname: '',\r\n\t\terror: false,\r\n\t\tsuccess: false,\r\n\t\tcategories: [],\r\n\t\tremoved: false,\r\n\t\treload: false,\r\n\t});\r\n\r\n\tconst { name, error, success, categories, removed, reload } = values;\r\n\tconst token = getCookie('token');\r\n\r\n\tuseEffect(() => {\r\n\t\tloadCategories();\r\n\t}, [reload]);\r\n\r\n\tconst loadCategories = () => {\r\n\t\tgetCategories().then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tconsole.log(data.error);\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({ ...values, categories: data });\r\n\t\t\t\tconsole.log(categories);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst showCategories = () => {\r\n\t\treturn categories.map((item, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Tooltip interactive title=\"Double Click to Delete\" arrow>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonDoubleClick={() => confirmDelete(item.slug)}\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tclassName=\"btn btn-outline-primary mr-1 ml-1 mt-3\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\tconst confirmDelete = (slug) => {\r\n\t\tlet answer = window.confirm(`Do you want to delete \"${slug}\" category? `);\r\n\t\tif (answer) {\r\n\t\t\tdeleteCategory(slug);\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteCategory = (slug) => {\r\n\t\tremoveCategory(slug, token).then((data) => {\r\n\t\t\tif (data.error) console.log(data.error);\r\n\t\t\telse setValues({ ...values, error: false, success: false, name: '', removed: !removed, reload: !reload });\r\n\t\t});\r\n\t\tconsole.log('deletes', slug);\r\n\t};\r\n\r\n\tconst clickSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tcreate({ name }, token).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error, success: false });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({ ...values, error: false, success: true, name: '', removed: !removed, reload: !reload });\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetValues({ ...values, name: e.target.value, error: false, success: false, removed: '' });\r\n\t};\r\n\r\n\tconst newCategoryForm = () => (\r\n\t\t<>\r\n\t\t\t<form onSubmit={clickSubmit}>\r\n\t\t\t\t<FormControl className={classes.margin}>\r\n\t\t\t\t\t<InputLabel htmlFor=\"input-with-category-icon\">Category Name:</InputLabel>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid=\"input-with-category-icon\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tstartAdornment={\r\n\t\t\t\t\t\t\t<InputAdornment position=\"start\">\r\n\t\t\t\t\t\t\t\t<ClassIcon />\r\n\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<CustomButton type=\"submit\" className={classes.button}>\r\n\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t</CustomButton>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</FormControl>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{newCategoryForm()}\r\n\t\t\t<div>\r\n\t\t\t\t<ListGroup>\r\n\t\t\t\t\t<ListGroupItem>{showCategories()}</ListGroupItem>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}