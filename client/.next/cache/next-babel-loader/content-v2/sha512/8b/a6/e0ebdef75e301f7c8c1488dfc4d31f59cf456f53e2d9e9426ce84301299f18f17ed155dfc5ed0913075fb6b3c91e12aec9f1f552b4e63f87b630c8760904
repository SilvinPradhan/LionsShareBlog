{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\silvi\\\\selu-blog\\\\client\\\\components\\\\auth\\\\SignIn.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { signin, authenticate, isAuthenticated } from '../../actions/auth';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Router from 'next/router';\nimport CustomButton from '../custom-button/custom-button.component';\nimport styles from '../Component.module.css';\nimport { Container } from '@material-ui/core';\n\nconst SignInComponent = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    email: 'silvinpradhan95@gmail.com',\n    password: 'Invoker200695@@',\n    error: '',\n    loading: false,\n    message: '',\n    showForm: true\n  }); // Destructure te values from the state.\n\n  const {\n    name,\n    email,\n    password,\n    error,\n    loading,\n    message,\n    showForm\n  } = values;\n  useEffect(() => {\n    // Check if there is a token and user data in localstorage as well as cookie, redirect the logged in user to homepage\n    isAuthenticated() && Router.push('/'); // For safety purposes so that '/signin' would not redirect to sign in page although the user already signed\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // console.table({ name, email, password, error, loading, message, showForm })\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true,\n      error: false\n    }));\n    const user = {\n      name,\n      email,\n      password\n    };\n    await signin(user).then(data => {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error,\n          loading: false\n        }));\n        toast.error(`${data.error}`);\n      } else {\n        // Save user token to cookie\n        // save user info to localStorage\n        // authenticate user\n        authenticate(data, () => {\n          if (isAuthenticated() && isAuthenticated().role === 1) {\n            Router.push(`/admin`);\n          } else {\n            Router.push(`/user`);\n          }\n        });\n        toast.success(`You have signed in as ${isAuthenticated().name}`);\n      }\n    });\n  };\n\n  const handleChange = name => e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      error: false,\n      [name]: e.target.value\n    }));\n  };\n\n  const showLoading = () => loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-info\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 76\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 42\n  }, this) : \"\";\n\n  const showError = () => error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-danger\",\n    children: [\" \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 38\n  }, this) : \"\";\n\n  const showMessage = () => message ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-info\",\n    children: [\" \", message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 42\n  }, this) : \"\"; // Button Disabled if the fields are empty..\n\n\n  const isEnabled = email.length > 0 && password.length > 0;\n\n  const signinForm = () => {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n          position: \"top-right\",\n          autoClose: 8000,\n          hideProgressBar: false,\n          newestOnTop: true,\n          closeOnClick: true,\n          rtl: false,\n          pauseOnFocusLoss: true,\n          draggable: true,\n          pauseOnHover: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: email,\n            onChange: handleChange('email'),\n            type: \"email\",\n            className: \"form-control\",\n            placeholder: \"Type your email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: password,\n            onChange: handleChange('password'),\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: \"Type your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col text-center\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/spinner.png\",\n            width: \"100px\",\n            height: \"100px\",\n            alt: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(CustomButton, {\n            className: styles.custom_button,\n            disabled: !isEnabled,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 114\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showError(), showLoading(), showMessage(), showForm && signinForm()]\n  }, void 0, true);\n};\n\nexport default SignInComponent;","map":{"version":3,"sources":["C:/Users/silvi/selu-blog/client/components/auth/SignIn.component.jsx"],"names":["useState","useEffect","signin","authenticate","isAuthenticated","ToastContainer","toast","Router","CustomButton","styles","Container","SignInComponent","values","setValues","email","password","error","loading","message","showForm","name","push","handleSubmit","e","preventDefault","user","then","data","role","success","handleChange","target","value","showLoading","showError","showMessage","isEnabled","length","signinForm","custom_button"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { signin, authenticate, isAuthenticated } from '../../actions/auth'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Router from 'next/router';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport styles from '../Component.module.css'\r\nimport { Container } from '@material-ui/core';\r\n\r\nconst SignInComponent = () => {\r\n    const [values, setValues] = useState({\r\n        email: 'silvinpradhan95@gmail.com',\r\n        password: 'Invoker200695@@',\r\n        error: '',\r\n        loading: false,\r\n        message: '',\r\n        showForm: true\r\n    })\r\n\r\n    // Destructure te values from the state.\r\n    const { name, email, password, error, loading, message, showForm } = values;\r\n\r\n    useEffect(() => {\r\n        // Check if there is a token and user data in localstorage as well as cookie, redirect the logged in user to homepage\r\n        isAuthenticated() && Router.push('/') // For safety purposes so that '/signin' would not redirect to sign in page although the user already signed\r\n    }, [])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // console.table({ name, email, password, error, loading, message, showForm })\r\n        setValues({ ...values, loading: true, error: false })\r\n        const user = { name, email, password }\r\n\r\n        await signin(user).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, loading: false })\r\n                toast.error(`${data.error}`)\r\n            } else {\r\n                // Save user token to cookie\r\n                // save user info to localStorage\r\n                // authenticate user\r\n                authenticate(data, () => {\r\n                    if (isAuthenticated() && isAuthenticated().role === 1) {\r\n                        Router.push(`/admin`);\r\n                    } else {\r\n                        Router.push(`/user`);\r\n                    }\r\n                })\r\n                toast.success(`You have signed in as ${isAuthenticated().name}`)\r\n            }\r\n        })\r\n\r\n    }\r\n    const handleChange = name => (e) => {\r\n        setValues({ ...values, error: false, [name]: e.target.value })\r\n    };\r\n\r\n    const showLoading = () => (loading ? <div className=\"alert alert-info\"><span> Loading ...</span></div> : \"\");\r\n    const showError = () => (error ? <div className=\"alert alert-danger\"> {error}</div> : \"\");\r\n    const showMessage = () => (message ? <div className=\"alert alert-info\"> {message}</div> : \"\");\r\n\r\n    // Button Disabled if the fields are empty..\r\n    const isEnabled = email.length > 0 && password.length > 0\r\n\r\n    const signinForm = () => {\r\n        return (\r\n            <Container maxWidth=\"md\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <ToastContainer position=\"top-right\" autoClose={8000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <input value={email} onChange={handleChange('email')} type=\"email\" className=\"form-control\" placeholder=\"Type your email\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input value={password} onChange={handleChange('password')} type=\"password\" className=\"form-control\" placeholder=\"Type your password\"></input>\r\n                    </div>\r\n                    {/* Submit */}\r\n                    <div className=\"form-group col text-center\">\r\n                        {loading ? (<img src=\"/spinner.png\" width=\"100px\" height=\"100px\" alt=\"Loading...\" />) : (<CustomButton className={styles.custom_button} disabled={!isEnabled}>Login</CustomButton>)}\r\n                    </div>\r\n                </form>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            {showError()}\r\n            {showLoading()}\r\n            {showMessage()}\r\n            { showForm && signinForm()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignInComponent;\r\n"]},"metadata":{},"sourceType":"module"}